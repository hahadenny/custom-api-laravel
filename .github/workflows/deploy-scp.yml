# Description

name: Simple SCP Deploy

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "dev" branch
  push:
    branches: [ "dev-polygon" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# For Deployer: It is important to specify "concurrency" for the workflow,
# to prevent concurrency between different deploys
concurrency: development_environment

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: secure copy via ssh key
        uses: appleboy/scp-action@master
        with:
          host: 'ec2-44-210-37-189.compute-1.amazonaws.com'
          username: 'ubuntu'
          port: '22'
          key: ${{ secrets.PRIVATE_KEY }}
          source: "."
          target: "/var/www/html/porta-api"

      # run setup commands like composer install and artisan migrate
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: 'ec2-44-210-37-189.compute-1.amazonaws.com'
          username: 'ubuntu'
          key: ${{ secrets.PRIVATE_KEY }}
          port: '22'
          script: |
            composer install --working-dir=/var/www/html/porta-api --verbose --prefer-dist --no-progress --no-interaction
            php /var/www/html/porta-api/artisan storage:link
            php /var/www/html/porta-api/artisan view:cache
            php /var/www/html/porta-api/artisan config:cache
            php /var/www/html/porta-api/artisan migrate
            php /var/www/html/porta-api/artisan scribe:generate
            php /var/www/html/porta-api/artisan queue:restart
            echo "Setup completed."
          # todo: setup supervisor later
          #  echo "" | sudo -S /usr/bin/supervisorctl restart porta-worker:*
