############################################################################
# Modified from: https://github.com/maheshmahadevan/docker-monitoring-windows
############################################################################

name: porta-monitoring-suite

volumes:
#    prometheus_data: {}
#    grafana_storage: {}
    portainer_data: {}

services:
#    prometheus:
#        image: portadisguise/porta-prometheus:latest
##        image: prom/prometheus:v2.53.1
#        container_name: prometheus
#        volumes:
##            - ./config/prometheus.yml:/etc/prometheus/prometheus.yml # copied in Dockerfile instead
#            - prometheus_data:/prometheus
#        command:
#            - '--config.file=/etc/prometheus/prometheus.yml'
#            - '--storage.tsdb.path=/prometheus'
#            - '--web.console.libraries=/usr/share/prometheus/console_libraries'
#            - '--web.console.templates=/usr/share/prometheus/consoles'
#        ports:
#            - "${PROMETHEUS_PORT:-9090}:9090"
#        networks:
#            - portanet
#
#    grafana:
#        image: portadisguise/porta-grafana:latest
##        image: grafana/grafana:11.1.2
#        container_name: grafana
#        user: "104"
#        depends_on:
#            - prometheus
#        ports:
#            - "${GRAFANA_PORT:-3000}:3000"
#        volumes:
#            - grafana_storage:/var/lib/grafana
##            - ./config/grafana/provisioning/:/etc/grafana/provisioning/ # Copied in Dockerfile instead
##        env_file:
##            - ./config/grafana/config.monitoring  # Set in Dockerfile instead
#        restart: always
#        networks:
#            - portanet
#
#
#    node-exporter:
#        image: prom/node-exporter:v1.8.2
#        container_name: node-exporter
#        volumes:
#            - /proc:/host/proc:ro
#            - /sys:/host/sys:ro
#        command:
#            - '--path.procfs=/host/proc'
#            - '--path.sysfs=/host/sys'
#            - --collector.filesystem.ignored-mount-points
#            - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
#        ports:
#            - 9100:9100
#        restart: always
#        networks:
#            - portanet
#
#    cadvisor:
#        image: gcr.io/cadvisor/cadvisor:v0.49.1
#        container_name: cadvisor
#        volumes:
#            - /var/run:/var/run:rw
#            - /sys:/sys:ro
#            - /var/lib/docker/:/var/lib/docker:ro
#        ports:
#            - "${CADVISOR_PORT:-8088}:8080"
#        restart: always
#        networks:
#            - portanet

    glances:
        environment:
            - "TZ=${TZ}"
            - "GLANCES_OPT=-w"
        image: portadisguise/porta-glances:latest
#        image: nicolargo/glances:4.1.2.1-full
        container_name: glances
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        pid: host
        ports:
            - 61208:61208
            - 61209:61209
        # Doesn't work :(
#        command:
#            - "--export prometheus"
        restart: always
        networks:
            - portanet

    portainer:
        image: portainer/portainer-ce:2.20.3
        container_name: portainer
        ports:
            - 8008:8008
            - 9443:9443
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - portainer_data:/data
        restart: always
        networks:
            - portanet

# Use existing network
networks:
    portanet:
        name: porta-net
        external: true
